# # https://github.com/eternnoir/pyTelegramBotAPI/blob/master/examples/custom_states.py
#
# import telebot  # telebot
# from telebot import types  # –¥–ª—è —É–∫–∞–∑–∞–Ω–∏–µ —Ç–∏–ø–æ–≤
# from telebot import custom_filters
# from telebot.handler_backends import State, StatesGroup  # States
# from telebot.storage import StateMemoryStorage
# from create_bot import telebot_test
# from database.create_database import create_database_def
# from database.add_table_values import *
# from psycopg2 import Error
# import logging
# import re
# # —â–∞ –±—É–¥–µ–º —Ç—è–Ω—É—Ç—å –∏–º–ø–æ—Ä—Ç—ã
# #–Ω–∞–¥–æ –±—ã–ª–æ —Å—Ä–∞–∑—É –¥–µ–ª–∞—Ç—å requarements —Å–µ–π—á–∞—Å —Å–¥–µ–ª–∞—é
#
#
# def buttons_main_menu(message):  # –ø—Ä–æ—Å—Ç–æ —Å–æ–∑–¥–∞—é –º–µ–Ω—é—à–∫—É
#     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#     btn1 = types.KeyboardButton("üìõ –ó–∞—è–≤–∫–∞")
#     btn2 = types.KeyboardButton("üìû –°–≤—è–∑—å")
#     markup.add(btn1, btn2)
#     btn3 = types.KeyboardButton("‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
#     btn4 = types.KeyboardButton("‚òé –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã")
#     markup.add(btn3)
#     markup.add(btn4)
#     bot.send_message(message.chat.id,
#                      text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –†–∞–∑ —Ç—ã —É–∂–µ –∑–∞—Ä–µ–≥–∞–ª—Å—è —è –º–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É".format(
#                          message.from_user), reply_markup=markup)
#     print('–Ø –¥–æ—à—ë–ª –¥–æ –∫–æ–Ω—Ü–∞ –≤ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ ')
#
# def buttons_main_ostavitzayavka_podelitsa_nazad(message):  # –ø—Ä–æ—Å—Ç–æ —Å–æ–∑–¥–∞—é –º–µ–Ω—é—à–∫—É
#     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#     btn1 = types.KeyboardButton("üìõ –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")
#     btn2 = types.KeyboardButton("üîî –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º")
#     markup.add(btn1, btn2)
#     btn3 = types.KeyboardButton("üõÖ –ù–∞–∑–∞–¥")
#     markup.add(btn3)
#     bot.send_message(message.chat.id,
#                      text="–≠—Ç–æ —è –≤ —Å—Ç–∞–¥–∏–∏ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏ –Ω–∞–∑–∞–¥".format(
#                          message.from_user), reply_markup=markup)
#     print('–Ø –¥–æ—à—ë–ª –¥–æ –∫–æ–Ω—Ü–∞ –≤ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ ')
#
#
# def buttons_svazatsa(message):#—Å–æ–∑–¥–∞—é inline knopki –¥–ª—è —Å–≤—è–∑–∞—Ç—å—Å—è
#     markup = types.InlineKeyboardMarkup(row_width=1)
#     btn1 = types.InlineKeyboardButton("–ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ", callback_data='perezvonite_mne')
#     btn2 = types.InlineKeyboardButton("–°–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–π–æ –≤ —á–∞—Ç-–±–æ—Ç–µ", callback_data='svaz_so_mnoy_v_chat_bote')
#     btn3 = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='nazad_iz_svarhites_so_mnoy')
#     markup.add(btn1, btn2, btn3)
#     bot.send_message(message.chat.id,
#                      text="–¢—ã –Ω–∞–∂–∞–ª—å –°–≤—è–∑–∞—Ç—å—Å—è –Ω—É –≤–æ—Ç —Ç–µ–±–µ –∏ –º–µ–Ω—é".format(
#                          message.from_user), reply_markup=markup)
#
# def ostavi_zayavka_shag1(message):#—Å–æ–∑–¥–∞—é inline knopki –¥–ª—è —Å–≤—è–∑–∞—Ç—å—Å—è
#     markup = types.InlineKeyboardMarkup(row_width=1)
#     btn1 = types.InlineKeyboardButton("–ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ", callback_data='perezvonite_mne')
#     btn2 = types.InlineKeyboardButton("–°–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–π–æ –≤ —á–∞—Ç-–±–æ—Ç–µ", callback_data='svaz_so_mnoy_v_chat_bote')
#     btn3 = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='nazad_iz_svarhites_so_mnoy')
#     markup.add(btn1, btn2, btn3)
#     bot.send_message(message.chat.id,
#                      text="–¢—ã –Ω–∞–∂–∞–ª—å –°–≤—è–∑–∞—Ç—å—Å—è –Ω—É –≤–æ—Ç —Ç–µ–±–µ –∏ –º–µ–Ω—é".format(
#                          message.from_user), reply_markup=markup)
#
# print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∑–∞–ø—É—Å—Ç–∏–ª—Å—è')
#
# state_storage = StateMemoryStorage()
# bot = telebot.TeleBot(telebot_test, state_storage=state_storage)
# create_database_def()  # –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–¥, —Å–æ–∑–¥–∞—ë–º –Ω—É–∂–Ω—É—é —Ç–∞–±–ª–∏—Ü—É(–¥–∞–ª—å—à–µ –∏—Ö –±—É–¥–µ—Ç –±–æ–ª—å—à–µ –¥–æ–ø–∏—à—É —Å –ø–µ—Ä–≤–∏—á–Ω—ã–º –∫–ª—é—á—ë–º –∏ –±–µ–∑
#
#
#
# @bot.message_handler(commands=['start'])
# def start_ex(message):
#     print('–Ø –≤–∏–∂—É –ø–æ—Å–ª–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —á—Ç–æ –µ–≥–æ –Ω–µ—Ç –≤ –±–¥')
#     bot.set_state(message.from_user.id, State_Ostavit_Zayavky.shag1, message.chat.id)
#     bot.send_message(message.chat.id, '–ó–ê–ü–†–û–° –ò–ù–§–´ ')
# class State_Ostavit_Zayavky(StatesGroup):
#     shag1 = State()
#     shag2 = State()
#     shag3 = State()
#     shag4 = State()
#
#
#
# @bot.message_handler(state=State_Ostavit_Zayavky.shag1)
# def zayavka_adres_shag1(message): #–∫–ª–∞—Å—Å,—Ç–æ —á—Ç–æ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –∏ —à–∞–≥ –¥–µ–π—Å—Ç–≤—É—é—â–∏–π
#     print('–Ø –•–ï–ù–î–õ–ï–†–û–ú –∫–æ—Ç–æ—Ä—ã–π –µ—Å—Ç—å —à–∞–≥1 ,—è —Å—é–¥–∞ –¥–æ—à—ë–ª ? ')
#     bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –∞–¥—Ä–µ—Å –∏ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É', parse_mode='html') #–ø–æ—Å–ª–µ –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏
#     adres = message.text
#     bot.set_state(message.from_user.id, State_Ostavit_Zayavky.shag2, message.chat.id)
#     with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
#             data['adres'] = message.text
# #—Ç—É—Ç —à–∞–≥–∏ –¥–ª—è –ø—Ä–∏—ë–º–∞ –∑–∞—è–≤–∫–∏ –ª–µ–≤–æ–µ –º–µ–Ω—é —Å –∏–Ω–ª–∞–π–Ω–∞–º–∏
#
#
# @bot.message_handler(state=State_Ostavit_Zayavky.shag2)
# def zayavka_photo_video_shag2(message):
#     seychas_napisali = message.text
#     print(seychas_napisali)
#     bot.send_message(message.chat.id, '–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–∫—É –∏–ª–∏ –≤–∏–¥–µ–æ ', parse_mode='html')
#     bot.set_state(message.from_user.id, State_Ostavit_Zayavky.shag3, message.chat.id) #–Ω–∞–¥–æ –±—Ä–∞—Ç—å id —Ñ–∞–π–ª–∞(—Ñ–æ—Ç–æ,–≤–∏–¥–µ–æ) –∏–∑ —Ç–µ–ª–µ–≥—Ä–∞–º json –∏–ª–∏
#     with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
#         data['photo_video'] = message.text
# @bot.message_handler(state=State_Ostavit_Zayavky.shag3)
# def zayavka_shag3(message):
#     seychas_napisali = message.text
#     print(seychas_napisali)
#     bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –≤–∞—à–µ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è,–æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É', parse_mode='html')
#     bot.set_state(message.from_user.id, State_Ostavit_Zayavky.shag4, message.chat.id)
#     with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
#         data['prichina_obrasheniya'] = message.text
# @bot.message_handler(state=State_Ostavit_Zayavky.shag4)
# def zayavka_shag3(message):
#     seychas_napisali = message.text
#     print(seychas_napisali)
#     bot.send_message(message.chat.id, '–í–∞—à–µ –æ–±—Ä–∞–µ–Ω–∏–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ', parse_mode='html')
#     with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
#         sobral_zayavku = \
#               (f"name: {data['adres']}\n"
#                f"phone: {data['photo_video']}\n"
#                f"phone: {data['prichina_obrasheniya']}\n")
#         print(sobral_zayavku)
#
#     bot.delete_state(message.from_user.id, message.chat.id)
#
#
#
#
#
# bot.add_custom_filter(custom_filters.StateFilter(bot))  # —Ö–º —á—Ç–æ–∂–µ –¥–µ–ª–∞—é—Ç —ç—Ç–æ –¥–≤–∞ —Ñ–∏–ª—å—Ç—Ä–∞ –Ω–∞–¥–æ–±—ã —É–∑–Ω–∞—Ç—å
# bot.add_custom_filter(custom_filters.IsDigitFilter())
#
#
#
# # @bot.message_handler(state=MyStates.svazatsa)
# # def ready_for_answer(message):
# #     bot.send_message(message.chat.id, "–Ø –ø–æ–ø–∞–ª –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞—è–≤–∫–∏")
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
# bot.infinity_polling(skip_pending=True)
